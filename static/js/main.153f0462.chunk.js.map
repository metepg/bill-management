{"version":3,"sources":["Functions/groupNameExists.js","Functions/loadFromLocalStorage.js","Functions/saveToLocalStorage.js","Functions/handleFormData.js","Functions/validate.js","Components/New/New.js","Functions/currentGroup.js","Components/Load/Load.js","Functions/updateSavedGroups.js","Functions/AddBill/saveBill.js","Components/Bills/AddBill/AddBillForm.js","Components/Bills/AddBill/AddBill.js","Components/Bills/Bills.js","App.js","index.js"],"names":["groupNameExists","groupName","groups","some","group","toLowerCase","key","JSON","parse","localStorage","getItem","value","setItem","stringify","handleFormData","formData","groupData","users","Object","values","validate","newGroup","savedGroups","load","firstGroup","save","alert","push","New","appProps","changePage","Form","onSubmit","e","preventDefault","FormData","target","formDataObj","fromEntries","entries","Group","controlId","Label","Control","type","placeholder","name","defaultValue","required","Button","variant","currentGroup","find","Load","map","onClick","style","display","flexDirection","margin","replace","findGroup","findIndex","x","getUserInfo","data","billInfo","description","evenShares","total","handleAddBillForm","form","submitBtn","button","current","disabled","details","bill","bills","update","saveBill","AddBillForm","AddBillProps","userNames","saveValue","totalSum","formRef","useRef","buttonRef","ref","reset","fontSize","marginBottom","onKeyDown","Fragment","onBlur","step","tabIndex","readOnly","marginLeft","marginRight","className","defaultChecked","AddBill","usersPaid","forEach","input","parseFloat","toFixed","updateField","Number","reduce","a","b","React","memo","Bills","useState","tab","setTab","Tabs","transition","id","activeKey","onSelect","k","borderBottom","marginTop","Tab","eventKey","title","App","page","setPage","goTo","active","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAWeA,MALf,SAAyBC,EAAWC,GAClC,OAAOA,EACJC,MAAK,SAACC,GAAD,OAAWA,EAAMH,UAAUI,gBAAkBJ,EAAUI,kBCHlD,WAACC,GAAD,OAASC,KAAKC,MAAMC,aAAaC,QAAQJ,KCAzC,WAACA,EAAKK,GAAN,OAAgBF,aAAaG,QAAQN,EAAKC,KAAKM,UAAUF,KCazDG,MAbf,SAAwBC,GACtB,IAAMC,EAAYD,EACVd,EAAce,EAAdf,UAQR,cALOe,EAAUf,UAKV,CAAEA,YAAWgB,MADNC,OAAOC,OAAOJ,KC2BfK,MA9Bf,SAAkBL,GAEhB,IAAMM,EAAWP,EAAeC,GAG1BO,EAAcC,EAAK,eAIzB,IAAKD,EAAa,CAChB,IAAME,EAAaH,EAGnB,OAFAI,EAAK,eAAgBD,GACrBC,EAAK,cAAe,CAACD,KACd,EAIT,OAAIxB,EAAgBqB,EAASpB,UAAWqB,IACtCI,MAAM,+BACC,IAKTJ,EAAYK,KAAKN,GACjBI,EAAK,cAAeH,GACpBG,EAAK,eAAgBJ,IACd,I,MCwBMO,MAxDf,SAAaC,GAAW,IACdC,EAAeD,EAAfC,WAaR,OACE,eAACC,EAAA,EAAD,CAAMC,SAZR,SAAoBC,GAClBA,EAAEC,iBAGF,IAAMnB,EAAW,IAAIoB,SAASF,EAAEG,QAC1BC,EAAcnB,OAAOoB,YAAYvB,EAASwB,WAG5CnB,EAASiB,IAAcP,EAAW,QAAS,UAI/C,UACE,eAACC,EAAA,EAAKS,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACV,EAAA,EAAKW,MAAN,yBACA,cAACX,EAAA,EAAKY,QAAN,CACEC,KAAK,OACLC,YAAY,aACZC,KAAK,YACLC,aAAa,kBAGjB,eAAChB,EAAA,EAAKS,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACV,EAAA,EAAKW,MAAN,oBACA,cAACX,EAAA,EAAKY,QAAN,CACEK,UAAQ,EACRJ,KAAK,OACLC,YAAY,SACZC,KAAK,QACLC,aAAa,aAEf,cAAChB,EAAA,EAAKY,QAAN,CACEK,UAAQ,EACRJ,KAAK,OACLC,YAAY,SACZC,KAAK,QACLC,aAAa,cAEf,cAAChB,EAAA,EAAKY,QAAN,CACEK,UAAQ,EACRJ,KAAK,OACLC,YAAY,SACZC,KAAK,QACLC,aAAa,mBAGjB,cAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUN,KAAK,SAA/B,wBC3CSO,MALf,SAAsBL,GAEpB,OADevB,EAAK,eACN6B,MAAK,SAAChD,GAAD,OAAWA,EAAMH,YAAc6C,MCmCrCO,MAvCf,SAAcxB,GAAW,IACfC,EAAeD,EAAfC,WACJ5B,EAASqB,EAAK,eAwBlB,OAXErB,EAHGA,EAGMA,EAAOoD,KAAI,SAAClD,GAAD,OAClB,wBACEmD,QAAS,kBAXItD,EAWYG,EAAMH,UAVnCwB,EAAK,eAAgB0B,EAAalD,SAClC6B,EAAW,QAAS,SAFtB,IAAmB7B,GAab2C,KAAK,SAHP,SAKGxC,EAAMH,WAHFG,EAAMH,cALN,kDAcT,qBACEuD,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,OAAQ,aAJZ,SAOGzD,K,gBC1BQ0D,MATf,SAAiBtD,EAAKF,GAAQ,IACpBH,EAAcG,EAAdH,UACFC,EAASqB,EAAKjB,GAEduD,EAAY3D,EAAO4D,WAAU,SAACC,GAAD,OAAOA,EAAE9D,YAAcA,KAC1DC,EAAO2D,GAAazD,EACpBqB,EAAKnB,EAAKJ,ICNZ,SAAS8D,EAAYC,GACnB,IAAMC,EAAWD,EAKjB,cAHOC,EAASC,mBACTD,EAASE,kBACTF,EAASG,MACTH,EAkCMI,MApBf,SAA2BC,EAAMC,GAC/BD,EAAKrC,iBACL,IAAMuC,EAASD,EACfC,EAAOC,QAAQC,UAAW,EAE1B,IAAM5D,EAAW,IAAIoB,SAASoC,EAAKnC,QAC7BjB,EAASD,OAAOoB,YAAYvB,EAASwB,WACrC0B,EAAO,CACXE,YAAahD,EAAOgD,YACpBE,MAAOlD,EAAOkD,MACdD,aAAcjD,EAAOiD,WACrBQ,QAASZ,EAAY7C,IAMvB,OA1BF,SAAkBgC,EAAc0B,GAC9B,IAAMzE,EAAQ+C,EACR,UAAW/C,EACZA,EAAM0E,MAAMnD,KAAKkD,GADGzE,EAAM0E,MAAQ,CAACD,GAExCpD,EAAK,eAAgBrB,GACrB2E,EAAO,cAAe3E,GAkBtB4E,CADqBzD,EAAK,gBACH0C,GACvBQ,EAAOC,QAAQC,UAAW,EAC1BjD,MAAM,UACC,GCgEMuD,MApGf,SAAqBC,GAAe,IAWVjE,EATtBkE,EAGED,EAHFC,UACAC,EAEEF,EAFFE,UACAC,EACEH,EADFG,SAGIC,EAAUC,mBACVC,EAAYD,mBAyBlB,OACE,eAACxD,EAAA,EAAD,CACE0D,IAAKH,EACLtD,SAAU,SAACC,GACT+C,EAAS/C,EAAGuD,GACRF,EAAQZ,QAAQgB,QAChBhE,MAAM,yBACV8D,EAAUd,QAAQC,UAAW,GANjC,UASE,eAAC5C,EAAA,EAAKW,MAAN,CACEc,MAAO,CAAEmC,SAAU,SAAUC,aAAc,QAC3CC,UAAW,SAAC5D,GAAD,MAAkB,UAAVA,EAAE3B,IACjB2B,EAAEC,iBACF,MAJN,kBAOE,cAACH,EAAA,EAAKY,QAAN,CACEC,KAAK,OACLE,KAAK,cACLE,UAAQ,EACRH,YAAY,aACZgD,UAAW,SAAC5D,GAAD,MAAkB,UAAVA,EAAE3B,IACjB2B,EAAEC,iBACF,WAGR,cAACH,EAAA,EAAKS,MAAN,CAAYC,UAAU,YAAtB,UAjDoBxB,EAkDFkE,EAjDblE,EAAMqC,KAAI,SAACR,GAAD,OACf,eAAC,IAAMgD,SAAP,WACE,cAAC/D,EAAA,EAAKW,MAAN,UACGI,IAEH,cAACf,EAAA,EAAKY,QAAN,CACEoD,OAAQ,SAAC9D,GAAD,OAAOmD,EAAUnD,EAAEG,SAC3BY,UAAQ,EACRF,KAAMA,EACNF,KAAK,SACLoD,KAAK,OACLnD,YAAY,OACZgD,UAAW,SAAC5D,GAAD,MAAkB,UAAVA,EAAE3B,IACjB2B,EAAEC,iBACF,QAEN,yBAfmBY,SAkDrB,eAACf,EAAA,EAAKS,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACV,EAAA,EAAKW,MAAN,yBACA,cAACX,EAAA,EAAKY,QAAN,CACEC,KAAK,SACLE,KAAK,QACLkD,KAAK,OACLnD,YAAY,OACZ4C,IAAKJ,EACLY,UAAW,EACXC,UAAQ,OAGZ,eAACnE,EAAA,EAAKW,MAAN,CAAYc,MAAO,CAAEoC,aAAc,QAAnC,yBAEE,uBACE9C,KAAK,aACLU,MAAO,CACL2C,WAAY,SACZC,YAAa,UAEfC,UAAU,SACVzD,KAAK,WACL0D,gBAAc,EACdT,UAAW,SAAC5D,GAAD,MAAkB,UAAVA,EAAE3B,IACjB2B,EAAEC,iBACF,WAGR,uBAEA,cAACe,EAAA,EAAD,CAAQC,QAAQ,UAAUN,KAAK,SAAS6C,IAAKD,EAA7C,wB,MC7FN,SAASe,IAAW,IACVtF,EAAUM,EAAK,gBAAfN,MACFoE,EAAWE,iBAAO,GAIpBiB,EAAY,GA2BhB,OA1BAvF,EAAMwF,SAAQ,SAACnG,GACbkG,EAAUlG,GAAO,KA0BjB,yBAAS+F,UAAU,sBAAnB,SACE,cAAC,EAAD,CACEjB,UAlBN,SAAmBnD,GACjB,IAAMyE,EAPR,SAAqBzE,GAEnB,OADAA,EAAEtB,MAAQgG,WAAW1E,EAAEtB,OAAOiG,QAAQ,GAC/B3E,EAAEtB,MAKKkG,CAAY5E,GAE1BA,EAAEtB,MAAQ+F,EACVF,EAAS,2BACJA,GADI,kBAENvE,EAAEa,KAAOgE,OAAOJ,KAInBrB,EAASX,QAAQ/D,MAAQO,OAAOC,OAAOqF,GACpCO,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACrBL,QAAQ,IAOPzB,UAAWlE,EACXuF,UAAWA,EACXnB,SAAUA,MAMH6B,UAAMC,KAAKZ,G,MCnBXa,MAzBf,WAAkB,IAAD,EACOC,mBAAS,WADhB,mBACRC,EADQ,KACHC,EADG,KAEf,OACE,eAACC,EAAA,EAAD,CACEC,YAAY,EACZC,GAAG,aACHC,UAAWL,EACXM,SAAU,SAACC,GAAD,OAAON,EAAOM,IACxBrE,MAAO,CACLG,OAAQ,cACRgC,SAAU,OACVmC,aAAc,OACdC,UAAW,UATf,UAYE,cAACC,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,WAA9B,SACE,cAAC,EAAD,MAEF,cAACF,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,aAA/B,SACE,gD,YCmCOC,MAnDf,WAAgB,IAAD,EACWd,mBAAS,QADpB,mBACNe,EADM,KACAC,EADA,OAEShB,mBAAS,OAFlB,mBAENC,EAFM,KAEDC,EAFC,KAIb,SAASzF,EAAWwG,EAAMC,GACxBF,EAAQC,GACRf,EAAOgB,GAGT,OACE,sBAAMlC,UAAU,gBAAhB,SACY,SAAT+B,EACC,eAACZ,EAAA,EAAD,CACEC,YAAY,EACZC,GAAG,aACHC,UAAWL,EACXM,SAAU,SAACC,GAAD,OAAON,EAAOM,IAJ1B,UAME,cAACG,EAAA,EAAD,CAAKC,SAAS,MAAMC,MAAM,MAA1B,SACE,cAAC,EAAD,CAAKpG,WAAYA,MAEnB,cAACkG,EAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,OAA3B,SACE,cAAC,EAAD,CAAMpG,WAAYA,SAItB,eAAC0F,EAAA,EAAD,CACEC,YAAY,EACZC,GAAG,aACHC,UAAWL,EACXM,SAAU,SAACC,GAAD,OAAON,EAAOM,IAJ1B,UAME,cAACG,EAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,QAA5B,SACE,cAAC,EAAD,MAEF,cAACF,EAAA,EAAD,CAAKC,SAAS,SAASC,MAAM,WAC7B,cAACF,EAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,OAA3B,SACE,wBACEtF,KAAK,SACLW,QAAS,kBAAMzB,EAAW,OAAQ,QAClC0B,MAAO,CAAEuE,UAAW,OAAQpC,SAAU,QAHxC,0BCzCZ6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.153f0462.chunk.js","sourcesContent":["/**\r\n * Check if group name already exists in localStorage\r\n * @param {string} groupName\r\n * @param {Array} groups - Array of groups saved to localStorage\r\n * @returns {boolean} - Group name exist or not\r\n */\r\nfunction groupNameExists(groupName, groups) {\r\n  return groups\r\n    .some((group) => group.groupName.toLowerCase() === groupName.toLowerCase());\r\n}\r\n\r\nexport default groupNameExists;\r\n","/**\r\n * Return parsed data from localStorage\r\n * @param {string} key\r\n * @returns {Array} - Parsed array\r\n */\r\nexport default (key) => JSON.parse(localStorage.getItem(key));\r\n","/**\r\n * Save data with key/value pairs to localStorage\r\n * @param {string} key\r\n * @param {Array} value - Group/s data as array\r\n */\r\nexport default (key, value) => localStorage.setItem(key, JSON.stringify(value));\r\n","/**\r\n * @param {Object} formData - Contains group name and usernames\r\n * @returns {Object} - { groupName: 'Meters', userNames: ['John','Mike','Helen'] }\r\n */\r\n\r\nfunction handleFormData(formData) {\r\n  const groupData = formData;\r\n  const { groupName } = groupData;\r\n\r\n  // Delete groupName property so object has only usernames as values\r\n  delete groupData.groupName;\r\n\r\n  // Make array from usernames\r\n  // Return object from group name and usernames\r\n  const users = Object.values(formData);\r\n  return { groupName, users };\r\n}\r\n\r\nexport default handleFormData;\r\n","import groupNameExists from './groupNameExists';\r\nimport load from './loadFromLocalStorage';\r\nimport save from './saveToLocalStorage';\r\nimport handleFormData from './handleFormData';\r\n\r\n// TODO:\r\n// Change error handling if group name exists\r\n// Validate fields\r\n\r\n// Validate form\r\n// Save group values to localStorage\r\nfunction validate(formData) {\r\n  // Create group object from formData\r\n  const newGroup = handleFormData(formData);\r\n\r\n  // Get saved groups from localStorage\r\n  const savedGroups = load('savedGroups');\r\n\r\n  // If no groups saved yet save group as new array\r\n  // Save group as object to localStorage currentGroup\r\n  if (!savedGroups) {\r\n    const firstGroup = newGroup;\r\n    save('currentGroup', firstGroup);\r\n    save('savedGroups', [firstGroup]);\r\n    return true;\r\n  }\r\n\r\n  // No duplicate group names\r\n  if (groupNameExists(newGroup.groupName, savedGroups)) {\r\n    alert('Group name already exists!');\r\n    return false;\r\n  }\r\n\r\n  // Add new group to previously created groups array\r\n  // Save current group to localStorage\r\n  savedGroups.push(newGroup);\r\n  save('savedGroups', savedGroups);\r\n  save('currentGroup', newGroup);\r\n  return true;\r\n}\r\n\r\nexport default validate;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport validate from '../../Functions/validate';\r\nimport './style.css';\r\n\r\nfunction New(appProps) {\r\n  const { changePage } = appProps;\r\n\r\n  function formSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Get form values as object\r\n    const formData = new FormData(e.target);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n\r\n    // If values are valid go to next page\r\n    if (validate(formDataObj)) changePage('page2', 'bills');\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={formSubmit}>\r\n      <Form.Group controlId=\"groupName\">\r\n        <Form.Label>Group name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"The meters\"\r\n          name=\"groupName\"\r\n          defaultValue=\"The Meters\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"users\">\r\n        <Form.Label>Users</Form.Label>\r\n        <Form.Control\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"User 1\"\r\n          name=\"user1\"\r\n          defaultValue=\"eka nimi\"\r\n        />\r\n        <Form.Control\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"User 2\"\r\n          name=\"user2\"\r\n          defaultValue=\"toka nimi\"\r\n        />\r\n        <Form.Control\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"User 3\"\r\n          name=\"user3\"\r\n          defaultValue=\"kolmas nimi\"\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default New;\r\n","import load from './loadFromLocalStorage';\r\n/**\r\n * From localStorage:\r\n * Get current groups data matching the group name\r\n * @param {string} name - Group name to match\r\n * @returns {Object} - Eg. { groupName: 'Meters', userNames: ['John','Mike','Helen'] }\r\n */\r\nfunction currentGroup(name) {\r\n  const groups = load('savedGroups');\r\n  return groups.find((group) => group.groupName === name);\r\n}\r\n\r\nexport default currentGroup;\r\n","import React from 'react';\r\nimport load from '../../Functions/loadFromLocalStorage';\r\nimport currentGroup from '../../Functions/currentGroup';\r\nimport save from '../../Functions/saveToLocalStorage';\r\n\r\nfunction Load(appProps) {\r\n  const { changePage } = appProps;\r\n  let groups = load('savedGroups');\r\n\r\n  // Save selected group as currentGroup\r\n  // Go to next page\r\n  function loadGroup(groupName) {\r\n    save('currentGroup', currentGroup(groupName));\r\n    changePage('page2', 'bills');\r\n  }\r\n\r\n  // Render group names as buttons\r\n  if (!groups) {\r\n    groups = <h1>No groups found!</h1>;\r\n  } else {\r\n    groups = groups.map((group) => (\r\n      <button\r\n        onClick={() => loadGroup(group.groupName)}\r\n        key={group.groupName}\r\n        type=\"button\"\r\n      >\r\n        {group.groupName}\r\n      </button>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '5rem 3rem',\r\n      }}\r\n    >\r\n      {groups}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Load;\r\n","import load from './loadFromLocalStorage';\r\nimport save from './saveToLocalStorage';\r\n\r\n// Update localStorage array\r\nfunction replace(key, group) {\r\n  const { groupName } = group;\r\n  const groups = load(key);\r\n\r\n  const findGroup = groups.findIndex((x) => x.groupName === groupName);\r\n  groups[findGroup] = group;\r\n  save(key, groups);\r\n}\r\n\r\nexport default replace;\r\n","import save from '../saveToLocalStorage';\r\nimport load from '../loadFromLocalStorage';\r\nimport update from '../updateSavedGroups';\r\n\r\nfunction getUserInfo(data) {\r\n  const billInfo = data;\r\n  // Remove all keys except how much users paid\r\n  delete billInfo.description;\r\n  delete billInfo.evenShares;\r\n  delete billInfo.total;\r\n  return billInfo;\r\n}\r\n\r\n// If no bills saved yet\r\n// Create array and add new bill\r\nfunction saveBill(currentGroup, bill) {\r\n  const group = currentGroup;\r\n  if (!('bills' in group)) group.bills = [bill];\r\n  else group.bills.push(bill);\r\n  save('currentGroup', group);\r\n  update('savedGroups', group);\r\n  return true;\r\n}\r\n\r\nfunction handleAddBillForm(form, submitBtn) {\r\n  form.preventDefault();\r\n  const button = submitBtn;\r\n  button.current.disabled = true;\r\n  // Get form values as object\r\n  const formData = new FormData(form.target);\r\n  const values = Object.fromEntries(formData.entries());\r\n  const data = {\r\n    description: values.description,\r\n    total: values.total,\r\n    evenShares: !!values.evenShares,\r\n    details: getUserInfo(values),\r\n  };\r\n  const currentGroup = load('currentGroup');\r\n  saveBill(currentGroup, data);\r\n  button.current.disabled = false;\r\n  alert('Saved');\r\n  return true;\r\n}\r\n\r\nexport default handleAddBillForm;\r\n","import React, { useRef } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport saveBill from '../../../Functions/AddBill/saveBill';\r\n\r\nfunction AddBillForm(AddBillProps) {\r\n  const {\r\n    userNames,\r\n    saveValue,\r\n    totalSum,\r\n  } = AddBillProps;\r\n\r\n  const formRef = useRef();\r\n  const buttonRef = useRef();\r\n\r\n  // Create input fields according to usernames\r\n  function getInputFields(users) {\r\n    return users.map((name) => (\r\n      <React.Fragment key={name}>\r\n        <Form.Label>\r\n          {name}\r\n        </Form.Label>\r\n        <Form.Control\r\n          onBlur={(e) => saveValue(e.target)}\r\n          required\r\n          name={name}\r\n          type=\"number\"\r\n          step=\"0.01\"\r\n          placeholder=\"0.00\"\r\n          onKeyDown={(e) => (e.key === 'Enter'\r\n            ? e.preventDefault()\r\n            : null)}\r\n        />\r\n        <br />\r\n      </React.Fragment>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      ref={formRef}\r\n      onSubmit={(e) => {\r\n        saveBill(e, buttonRef)\r\n          ? formRef.current.reset()\r\n          : alert('Something went wrong!');\r\n        buttonRef.current.disabled = false;\r\n      }}\r\n    >\r\n      <Form.Label\r\n        style={{ fontSize: '1.5rem', marginBottom: '1rem' }}\r\n        onKeyDown={(e) => (e.key === 'Enter'\r\n          ? e.preventDefault()\r\n          : null)}\r\n      >\r\n        Title\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"description\"\r\n          required\r\n          placeholder=\"Bill title\"\r\n          onKeyDown={(e) => (e.key === 'Enter'\r\n            ? e.preventDefault()\r\n            : null)}\r\n        />\r\n      </Form.Label>\r\n      <Form.Group controlId=\"usersPaid\">\r\n        {getInputFields(userNames)}\r\n      </Form.Group>\r\n      <Form.Group controlId=\"totalSum\">\r\n        <Form.Label>Total sum:</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          name=\"total\"\r\n          step=\"0.01\"\r\n          placeholder=\"0.00\"\r\n          ref={totalSum}\r\n          tabIndex={-1}\r\n          readOnly\r\n        />\r\n      </Form.Group>\r\n      <Form.Label style={{ marginBottom: '1rem' }}>\r\n        Even shares?\r\n        <input\r\n          name=\"evenShares\"\r\n          style={{\r\n            marginLeft: '0.5rem',\r\n            marginRight: '0.4rem',\r\n          }}\r\n          className=\"toggle\"\r\n          type=\"checkbox\"\r\n          defaultChecked\r\n          onKeyDown={(e) => (e.key === 'Enter'\r\n            ? e.preventDefault()\r\n            : null)}\r\n        />\r\n      </Form.Label>\r\n      <br />\r\n\r\n      <Button variant=\"primary\" type=\"submit\" ref={buttonRef}>\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AddBillForm;\r\n","import React, { useRef } from 'react';\r\nimport Form from './AddBillForm';\r\nimport load from '../../../Functions/loadFromLocalStorage';\r\nimport './style.css';\r\n\r\nfunction AddBill() {\r\n  const { users } = load('currentGroup');\r\n  const totalSum = useRef(0);\r\n\r\n  // Create object\r\n  // Set usernames as keys\r\n  let usersPaid = {};\r\n  users.forEach((key) => {\r\n    usersPaid[key] = 0;\r\n  });\r\n\r\n  // Return value to have 2 decimals\r\n  function updateField(e) {\r\n    e.value = parseFloat(e.value).toFixed(2);\r\n    return e.value;\r\n  }\r\n\r\n  // Handle user inputs\r\n  function saveValue(e) {\r\n    const input = updateField(e);\r\n    // Save user input to correct username\r\n    e.value = input;\r\n    usersPaid = {\r\n      ...usersPaid,\r\n      [e.name]: Number(input),\r\n    };\r\n\r\n    // Calulate total sum value from user inputs\r\n    totalSum.current.value = Object.values(usersPaid)\r\n      .reduce((a, b) => a + b)\r\n      .toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <section className=\"add-bill-controller\">\r\n      <Form\r\n        saveValue={saveValue}\r\n        userNames={users}\r\n        usersPaid={usersPaid}\r\n        totalSum={totalSum}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default React.memo(AddBill);\r\n","import React, { useState } from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport AddBill from './AddBill/AddBill';\r\nimport './style.css';\r\n\r\nfunction Bills() {\r\n  const [tab, setTab] = useState('addBill');\r\n  return (\r\n    <Tabs\r\n      transition={false}\r\n      id=\"controlled\"\r\n      activeKey={tab}\r\n      onSelect={(k) => setTab(k)}\r\n      style={{\r\n        margin: '0.5rem 3rem',\r\n        fontSize: '1rem',\r\n        borderBottom: 'none',\r\n        marginTop: '0.5rem',\r\n      }}\r\n    >\r\n      <Tab eventKey=\"addBill\" title=\"Add bill\">\r\n        <AddBill />\r\n      </Tab>\r\n      <Tab eventKey=\"showBill\" title=\"Show bills\">\r\n        <h1>ShowBill</h1>\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default Bills;\r\n","import React, { useState } from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport New from './Components/New/New';\r\nimport Load from './Components/Load/Load';\r\nimport Bills from './Components/Bills/Bills';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState('main');\r\n  const [tab, setTab] = useState('new');\r\n\r\n  function changePage(goTo, active) {\r\n    setPage(goTo);\r\n    setTab(active);\r\n  }\r\n\r\n  return (\r\n    <main className=\"app-container\">\r\n      {page === 'main' ? (\r\n        <Tabs\r\n          transition={false}\r\n          id=\"controlled\"\r\n          activeKey={tab}\r\n          onSelect={(k) => setTab(k)}\r\n        >\r\n          <Tab eventKey=\"new\" title=\"New\">\r\n            <New changePage={changePage} />\r\n          </Tab>\r\n          <Tab eventKey=\"load\" title=\"Load\">\r\n            <Load changePage={changePage} />\r\n          </Tab>\r\n        </Tabs>\r\n      ) : (\r\n        <Tabs\r\n          transition={false}\r\n          id=\"controlled\"\r\n          activeKey={tab}\r\n          onSelect={(k) => setTab(k)}\r\n        >\r\n          <Tab eventKey=\"bills\" title=\"Bills\">\r\n            <Bills />\r\n          </Tab>\r\n          <Tab eventKey=\"manage\" title=\"Manage\" />\r\n          <Tab eventKey=\"exit\" title=\"Exit\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => changePage('main', 'new')}\r\n              style={{ marginTop: '5rem', fontSize: '2rem' }}\r\n            >\r\n              Exit\r\n            </button>\r\n          </Tab>\r\n        </Tabs>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}