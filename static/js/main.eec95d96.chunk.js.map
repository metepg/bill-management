{"version":3,"sources":["Components/Main Page/New/UserNames.js","Functions/groupNameExists.js","Functions/loadFromLocalStorage.js","Functions/saveToLocalStorage.js","Functions/handleFormData.js","Functions/validate.js","Components/Main Page/New/New.js","Functions/currentGroup.js","Components/Main Page/Load/Load.js","Components/Main Page/Main Page.js","Functions/updateSavedGroups.js","Functions/AddBill/saveBill.js","Components/Second Page/Bills/AddBill/AddBillForm.js","Components/Second Page/Bills/AddBill/AddBill.js","Components/Second Page/Bills/ShowBills/BillTable.js","Components/Second Page/Bills/ShowBills/ShowBills.js","Components/Second Page/Bills/Bills.js","Functions/totalSum.js","Functions/Balance/balance.js","Components/Second Page/Balance/Chart.js","Components/Second Page/Balance/Balance.js","Functions/EditBill/saveChanges.js","Components/Second Page/Bills/EditBills/EditBills.js","Components/Second Page/Second Page.js","App.js","index.js"],"names":["UserNames","props1","users","inputs","i","push","Fragment","Form","Control","required","type","placeholder","name","groupNameExists","groupName","groups","some","group","toLowerCase","key","JSON","parse","localStorage","getItem","value","setItem","stringify","handleFormData","formData","groupData","Object","values","validate","newGroup","savedGroups","load","firstGroup","save","alert","New","appProps","changePage","useState","participants","setParticipants","onSubmit","e","preventDefault","FormData","target","formDataObj","fromEntries","entries","autoComplete","Group","controlId","Label","as","onChange","Button","variant","currentGroup","find","Load","map","onClick","style","display","flexDirection","margin","MainPage","tab","setTab","Tabs","transition","id","activeKey","onSelect","k","Tab","eventKey","title","replace","findGroup","findIndex","x","getUserInfo","data","billInfo","description","total","paid","handleAddBillForm","form","submitBtn","button","current","disabled","Number","details","bill","bills","update","saveBill","AddBillForm","AddBillProps","userNames","saveValue","totalSum","setBill","formRef","useRef","buttonRef","ref","reset","length","fontSize","marginBottom","onKeyDown","onBlur","onFocus","step","tabIndex","readOnly","AddBill","pageProps","usersPaid","forEach","className","userPaid","parseFloat","toFixed","updateField","reduce","a","b","BillTable","showBillProps","currentBill","editBill","valueChange","amount","billData","user","index","color","all","cursor","float","paddingRight","Table","responsive","striped","bordered","hover","size","textAlign","ShowBills","billsProps","billElements","hidden","Bills","borderBottom","marginTop","totalValue","getIndex","userPaidTotal","payment","userName","totalSumFromBills","userIndex","Math","round","Chart","balanceProps","balance","userData","colors","label","radius","height","dataEntry","labelPosition","labelStyle","Balance","getBalance","userFields","userBalance","paddingTop","saveChanges","editedBill","billIndex","obj","groupIndex","EditBills","padding","handleEdit","defaultValue","confirm","React","memo","SecondPage","setCurrentBill","editMode","setEditMode","App","page","setPage","goTo","active","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eec95d96.chunk.js","sourcesContent":["import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction UserNames(props1) {\r\n  const { users } = props1;\r\n\r\n  const inputs = [];\r\n\r\n  for (let i = 0; i < users; i += 1) {\r\n    inputs.push(\r\n      <React.Fragment key={`User ${i}`}>\r\n        <Form.Control\r\n          required\r\n          type=\"text\"\r\n          placeholder={`User ${i + 1}`}\r\n          name={`User ${i}`}\r\n        />\r\n      </React.Fragment>,\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {inputs}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserNames;\r\n","/**\r\n * Check if group name already exists in localStorage\r\n * @param {string} groupName\r\n * @param {Array} groups - Array of groups saved to localStorage\r\n * @returns {boolean} - Group name exist or not\r\n */\r\nfunction groupNameExists(groupName, groups) {\r\n  return groups\r\n    .some((group) => group.groupName.toLowerCase() === groupName.toLowerCase());\r\n}\r\n\r\nexport default groupNameExists;\r\n","/**\r\n * Return parsed data from localStorage\r\n * @param {string} key\r\n * @returns {Array} - Parsed array\r\n */\r\nexport default (key) => JSON.parse(localStorage.getItem(key));\r\n","/**\r\n * Save data with key/value pairs to localStorage\r\n * @param {string} key\r\n * @param {Array} value - Group/s data as array\r\n */\r\nexport default (key, value) => localStorage.setItem(key, JSON.stringify(value));\r\n","/**\r\n * @param {Object} formData - Contains group name and usernames\r\n * @returns {Object} - { groupName: 'Meters', userNames: ['John','Mike','Helen'] }\r\n */\r\n\r\nfunction handleFormData(formData) {\r\n  const groupData = formData;\r\n  const { groupName } = groupData;\r\n\r\n  // Delete groupName property so object has only usernames as values\r\n  delete groupData.groupName;\r\n\r\n  // Make array from usernames\r\n  // Return object from group name and usernames\r\n  const users = Object.values(formData);\r\n  return { groupName, users };\r\n}\r\n\r\nexport default handleFormData;\r\n","import groupNameExists from './groupNameExists';\r\nimport load from './loadFromLocalStorage';\r\nimport save from './saveToLocalStorage';\r\nimport handleFormData from './handleFormData';\r\n\r\n// TODO:\r\n// Change error handling if group name exists\r\n// Validate fields\r\n\r\n// Validate form\r\n// Save group values to localStorage\r\nfunction validate(formData) {\r\n  // Create group object from formData\r\n  const newGroup = handleFormData(formData);\r\n\r\n  // Get saved groups from localStorage\r\n  const savedGroups = load('savedGroups');\r\n\r\n  // If no groups saved yet save group as new array\r\n  // Save group as object to localStorage currentGroup\r\n  if (!savedGroups) {\r\n    const firstGroup = newGroup;\r\n    save('currentGroup', firstGroup);\r\n    save('savedGroups', [firstGroup]);\r\n    return true;\r\n  }\r\n\r\n  // No duplicate group names\r\n  if (groupNameExists(newGroup.groupName, savedGroups)) {\r\n    alert('Group name already exists!');\r\n    return false;\r\n  }\r\n\r\n  // Add new group to previously created groups array\r\n  // Save current group to localStorage\r\n  savedGroups.push(newGroup);\r\n  save('savedGroups', savedGroups);\r\n  save('currentGroup', newGroup);\r\n  return true;\r\n}\r\n\r\nexport default validate;\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Users from './UserNames';\r\nimport validate from '../../../Functions/validate';\r\nimport './style.css';\r\n\r\nfunction New(appProps) {\r\n  const { changePage } = appProps;\r\n  const [participants, setParticipants] = useState(2);\r\n\r\n  function formSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Get form values as object\r\n    const formData = new FormData(e.target);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n\r\n    // If values are valid go to next page\r\n    if (validate(formDataObj)) changePage('page2', 'bills');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={formSubmit} autoComplete=\"off\">\r\n        <Form.Group controlId=\"groupName\">\r\n          <Form.Label>\r\n            Group name\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Max. 20 characters\"\r\n              name=\"groupName\"\r\n              required\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>\r\n            Users\r\n            <Form.Control as=\"select\" onChange={(e) => setParticipants(e.target.value)}>\r\n              <option value={2}>2</option>\r\n              <option value={3}>3</option>\r\n              <option value={4}>4</option>\r\n              <option value={5}>5</option>\r\n              <option value={6}>6</option>\r\n              <option value={7}>7</option>\r\n            </Form.Control>\r\n          </Form.Label>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>\r\n            Users\r\n            <Users users={participants} />\r\n          </Form.Label>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default New;\r\n","import load from './loadFromLocalStorage';\r\n/**\r\n * From localStorage:\r\n * Get current groups data matching the group name\r\n * @param {string} name - Group name to match\r\n * @returns {Object} - Eg. { groupName: 'Meters', userNames: ['John','Mike','Helen'] }\r\n */\r\nfunction currentGroup(name) {\r\n  const groups = load('savedGroups');\r\n  return groups.find((group) => group.groupName === name);\r\n}\r\n\r\nexport default currentGroup;\r\n","import React from 'react';\r\nimport load from '../../../Functions/loadFromLocalStorage';\r\nimport currentGroup from '../../../Functions/currentGroup';\r\nimport save from '../../../Functions/saveToLocalStorage';\r\n\r\nfunction Load(appProps) {\r\n  const { changePage } = appProps;\r\n  let groups = load('savedGroups');\r\n\r\n  // Save selected group as currentGroup\r\n  // Go to next page\r\n  function loadGroup(groupName) {\r\n    save('currentGroup', currentGroup(groupName));\r\n    changePage('page2', 'bills');\r\n  }\r\n\r\n  // Render group names as buttons\r\n  if (!groups) {\r\n    groups = <h1>No groups found!</h1>;\r\n  } else {\r\n    groups = groups.map((group) => (\r\n      <button\r\n        onClick={() => loadGroup(group.groupName)}\r\n        key={group.groupName}\r\n        type=\"button\"\r\n      >\r\n        {group.groupName}\r\n      </button>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '5rem 3rem',\r\n      }}\r\n    >\r\n      {groups}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Load;\r\n","import React from 'react';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport New from './New/New';\r\nimport Load from './Load/Load';\r\n\r\nfunction MainPage(appProps) {\r\n  const { tab, setTab, changePage } = appProps;\r\n  return (\r\n    <Tabs\r\n      transition={false}\r\n      id=\"controlled\"\r\n      activeKey={tab}\r\n      onSelect={(k) => setTab(k)}\r\n    >\r\n      <Tab eventKey=\"new\" title=\"New\">\r\n        <New changePage={changePage} />\r\n      </Tab>\r\n      <Tab eventKey=\"load\" title=\"Load\">\r\n        <Load changePage={changePage} />\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import load from './loadFromLocalStorage';\r\nimport save from './saveToLocalStorage';\r\n\r\n// Update localStorage array\r\nfunction replace(key, group) {\r\n  const { groupName } = group;\r\n  const groups = load(key);\r\n\r\n  const findGroup = groups.findIndex((x) => x.groupName === groupName);\r\n  groups[findGroup] = group;\r\n  save(key, groups);\r\n}\r\n\r\nexport default replace;\r\n","import save from '../saveToLocalStorage';\r\nimport load from '../loadFromLocalStorage';\r\nimport update from '../updateSavedGroups';\r\n\r\nfunction getUserInfo(data) {\r\n  const billInfo = data;\r\n  // Remove all keys except how much users paid\r\n  delete billInfo.description;\r\n  delete billInfo.total;\r\n\r\n  // Return array of objects\r\n  return Object.entries(billInfo)\r\n    .map(([name, paid]) => ({ name, paid }));\r\n}\r\n\r\n// If no bills saved yet\r\n// Create array and add new bill\r\nfunction saveBill(currentGroup, bill) {\r\n  const group = currentGroup;\r\n  if (!('bills' in group)) group.bills = [bill];\r\n  else group.bills.push(bill);\r\n  save('currentGroup', group);\r\n  update('savedGroups', group);\r\n  return true;\r\n}\r\n\r\n// Starts with this function\r\nfunction handleAddBillForm(form, submitBtn) {\r\n  form.preventDefault();\r\n  const button = submitBtn;\r\n  button.current.disabled = true;\r\n  // Get form values as object\r\n  const formData = new FormData(form.target);\r\n  const values = Object.fromEntries(formData.entries());\r\n  const data = {\r\n    description: values.description,\r\n    total: Number(values.total),\r\n    details: getUserInfo(values),\r\n  };\r\n  const currentGroup = load('currentGroup');\r\n  saveBill(currentGroup, data);\r\n  button.current.disabled = false;\r\n  alert('Saved');\r\n  return true;\r\n}\r\n\r\nexport default handleAddBillForm;\r\n","import React, { useRef } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport saveBill from '../../../../Functions/AddBill/saveBill';\r\n\r\nfunction AddBillForm(AddBillProps) {\r\n  const {\r\n    userNames,\r\n    saveValue,\r\n    totalSum,\r\n    bills,\r\n    setBill,\r\n  } = AddBillProps;\r\n\r\n  const formRef = useRef();\r\n  const buttonRef = useRef();\r\n\r\n  // Create input fields according to usernames\r\n  function getInputFields(users) {\r\n    return users.map((name) => (\r\n      <React.Fragment key={name}>\r\n        <Form.Label>\r\n          {name}\r\n          <Form.Control\r\n            onBlur={(e) => saveValue(e.target)}\r\n            onFocus={(e) => { e.target.value = ''; }}\r\n            required\r\n            name={name}\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            placeholder=\"0.00\"\r\n            onKeyDown={(e) => (e.key === 'Enter'\r\n              ? e.preventDefault()\r\n              : null)}\r\n          />\r\n        </Form.Label>\r\n        <br />\r\n      </React.Fragment>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      autoComplete=\"off\"\r\n      ref={formRef}\r\n      onSubmit={(e) => {\r\n        saveBill(e, buttonRef)\r\n          ? formRef.current.reset()\r\n          : alert('Something went wrong!');\r\n        buttonRef.current.disabled = false;\r\n        setBill(bills\r\n          ? bills.length\r\n          : 0);\r\n      }}\r\n    >\r\n      <Form.Label\r\n        style={{ fontSize: '1.5rem', marginBottom: '1rem' }}\r\n        onKeyDown={(e) => (e.key === 'Enter'\r\n          ? e.preventDefault()\r\n          : null)}\r\n      >\r\n        Title\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"description\"\r\n          required\r\n          placeholder=\"Bill title\"\r\n          onKeyDown={(e) => (e.key === 'Enter'\r\n            ? e.preventDefault()\r\n            : null)}\r\n        />\r\n      </Form.Label>\r\n      <Form.Group>\r\n        {getInputFields(userNames)}\r\n      </Form.Group>\r\n      <Form.Group controlId=\"totalSum\">\r\n        <Form.Label>\r\n          Total sum:\r\n          <Form.Control\r\n            type=\"number\"\r\n            name=\"total\"\r\n            step=\"0.01\"\r\n            placeholder=\"0.00\"\r\n            ref={totalSum}\r\n            tabIndex={-1}\r\n            readOnly\r\n          />\r\n        </Form.Label>\r\n      </Form.Group>\r\n      <br />\r\n      <Button variant=\"primary\" type=\"submit\" ref={buttonRef}>\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\nexport default AddBillForm;\r\n","import React, { useRef } from 'react';\r\nimport Form from './AddBillForm';\r\nimport load from '../../../../Functions/loadFromLocalStorage';\r\nimport './style.css';\r\n\r\nfunction AddBill(pageProps) {\r\n  const { bills, setBill } = pageProps;\r\n  const { users } = load('currentGroup');\r\n  const totalSum = useRef(0);\r\n\r\n  // Create object\r\n  // Set usernames as keys\r\n  let usersPaid = {};\r\n  users.forEach((key) => {\r\n    usersPaid[key] = 0;\r\n  });\r\n\r\n  // Return value to have 2 decimals\r\n  function updateField(e) {\r\n    e.value = parseFloat(e.value).toFixed(2);\r\n    return e.value;\r\n  }\r\n\r\n  // Handle user inputs\r\n  function saveValue(e) {\r\n    const userPaid = updateField(e);\r\n    // Save user input to correct username\r\n    usersPaid = {\r\n      ...usersPaid,\r\n      [e.name]: Number(userPaid),\r\n    };\r\n\r\n    // Calulate total sum value from user inputs\r\n    totalSum.current.value = Number(Object.values(usersPaid)\r\n      .reduce((a, b) => a + b))\r\n      .toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <section className=\"add-bill-controller\">\r\n      <Form\r\n        saveValue={saveValue}\r\n        userNames={users}\r\n        usersPaid={usersPaid}\r\n        totalSum={totalSum}\r\n        bills={bills}\r\n        setBill={setBill}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AddBill;\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nfunction BillTable(showBillProps) {\r\n  const { currentBill, editBill } = showBillProps;\r\n\r\n  const prefix = (amount) => (amount >= 0\r\n    ? `+${amount}`\r\n    : `${amount}`);\r\n\r\n  // User balance\r\n  function valueChange(paid) {\r\n    const userPaid = paid;\r\n    const { total } = currentBill;\r\n    const participants = currentBill.details.length;\r\n    return prefix((userPaid - total / participants).toFixed(2));\r\n  }\r\n\r\n  const billData = currentBill\r\n    ? currentBill\r\n      .details\r\n      .map((user, index) => (\r\n        <React.Fragment key={`${user.name}${index * 1}`}>\r\n          <tr>\r\n            <td>{user.name}</td>\r\n            <td>{`${user.paid} €`}</td>\r\n            <td\r\n          // Green color if user paid more than needed\r\n          // Red color if user paid less than needed\r\n              style={{\r\n                color: valueChange(user.paid) >= 0\r\n                  ? 'green'\r\n                  : 'red',\r\n              }}\r\n            >\r\n              {`${valueChange(user.paid)} €`}\r\n\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      )) : null;\r\n\r\n  return (\r\n    <>\r\n      {currentBill\r\n        ? (\r\n          <>\r\n            <br />\r\n            <h1>{currentBill.description}</h1>\r\n            <button\r\n              onClick={() => editBill()}\r\n              type=\"button\"\r\n              style={{\r\n                all: 'unset',\r\n                cursor: 'pointer',\r\n                float: 'right',\r\n                fontSize: '1.3rem',\r\n                paddingRight: '1rem',\r\n              }}\r\n            >\r\n              <i className=\"far fa-edit\" />\r\n            </button>\r\n            <Table responsive striped bordered hover size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Paid</th>\r\n                  <th>Change</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {billData}\r\n              </tbody>\r\n            </Table>\r\n            <i>\r\n              <h5 style={{ textAlign: 'center' }}>\r\n                {`Bill amount: ${currentBill.total.toFixed(2)} €`}\r\n              </h5>\r\n            </i>\r\n          </>\r\n        )\r\n        : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BillTable;\r\n","import React from 'react';\r\nimport Table from './BillTable';\r\n\r\nfunction ShowBills(billsProps) {\r\n  const {\r\n    currentBill, editBill, setBill, bills,\r\n  } = billsProps;\r\n\r\n  const billElements = bills\r\n    ? bills.map((bill, index) => (\r\n      <React.Fragment key={`${index * 1}${bill.description}`}>\r\n        <option value={index}>{`${bill.description} (${(bill.total).toFixed(2)} €)`}</option>\r\n      </React.Fragment>\r\n    ))\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      <select\r\n        style={{ textAlign: 'center' }}\r\n        value={currentBill\r\n          ? bills.findIndex((bill) => bill.description === currentBill.description)\r\n          : ''}\r\n        onChange={(e) => setBill(e.target.value)}\r\n      >\r\n        <option hidden>Select bill</option>\r\n        {billElements}\r\n      </select>\r\n      <br />\r\n      <hr />\r\n      <Table\r\n        currentBill={currentBill}\r\n        editBill={editBill}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShowBills;\r\n","import React, { useState } from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Add from './AddBill/AddBill';\r\nimport Show from './ShowBills/ShowBills';\r\nimport load from '../../../Functions/loadFromLocalStorage';\r\nimport './style.css';\r\n\r\nfunction Bills(pageProps) {\r\n  const { editBill, currentBill, setBill } = pageProps;\r\n  const [tab, setTab] = useState(currentBill ? 'showBill' : 'addBill');\r\n  const currentGroup = load('currentGroup');\r\n  const { bills } = currentGroup;\r\n\r\n  return (\r\n    <Tabs\r\n      transition={false}\r\n      id=\"controlled\"\r\n      activeKey={tab}\r\n      onSelect={(k) => setTab(k)}\r\n      style={{\r\n        margin: '0.5rem 3rem',\r\n        fontSize: '1rem',\r\n        borderBottom: 'none',\r\n        marginTop: '0.5rem',\r\n      }}\r\n    >\r\n      <Tab eventKey=\"addBill\" title=\"Add bill\">\r\n        <Add setBill={setBill} bills={bills} />\r\n      </Tab>\r\n      <Tab eventKey=\"showBill\" title=\"Show bills\">\r\n        { bills\r\n          ? (\r\n            <Show\r\n              currentGroup={currentGroup}\r\n              editBill={editBill}\r\n              currentBill={currentBill}\r\n              bills={bills}\r\n              setBill={setBill}\r\n            />\r\n          )\r\n          : <h4>No bills saved</h4>}\r\n\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default Bills;\r\n","// Return total sum from all bills\r\nconst totalSum = (bills) => (bills\r\n  ? bills\r\n    .map((bill) => bill.total)\r\n    .reduce((value, totalValue) => value + totalValue)\r\n  : 0);\r\n\r\nexport default totalSum;\r\n","import totalSumFromBills from '../totalSum';\r\n\r\n// Get user index from user names array\r\nconst getIndex = (userNames, user) => userNames\r\n  .findIndex((name) => name === user);\r\n\r\nfunction userPaidTotal(bills, user) {\r\n  if (!bills) return 0;\r\n  // Get all user payments from bills\r\n  const userPayments = bills\r\n    .map((bill) => Number(bill.details[user].paid));\r\n\r\n  // Add user payments together to get total sum\r\n  return userPayments\r\n    .reduce((payment, total) => payment + total);\r\n}\r\n\r\n// Calculate total balance for user\r\nfunction getBalance(bills, userNames, userName) {\r\n  if (!bills) return 0;\r\n\r\n  // How many users in group\r\n  const participants = userNames.length;\r\n\r\n  // Total sum from bills\r\n  const totalSum = totalSumFromBills(bills);\r\n\r\n  // Get current user index from userNames array\r\n  const userIndex = getIndex(userNames, userName);\r\n\r\n  // return balance\r\n  return Math\r\n    .round(((userPaidTotal(bills, userIndex) - totalSum / participants)) * 100) / 100;\r\n}\r\n\r\nexport default { getIndex, userPaidTotal, getBalance };\r\n","/* eslint-disable array-callback-return */\r\nimport React from 'react';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport balance from '../../../Functions/Balance/balance';\r\n\r\nfunction Chart(balanceProps) {\r\n  const {\r\n    totalValue, users, bills,\r\n  } = balanceProps;\r\n  const { getIndex, userPaidTotal } = balance;\r\n  const userData = [];\r\n  const colors = [\r\n    '#f15a24',\r\n    '#fbb03b',\r\n    '#75a0aa',\r\n    '#5163af',\r\n    'gray',\r\n    'brown',\r\n    'yellow',\r\n    'green'];\r\n\r\n  const defaultLabelStyle = {\r\n    fontSize: '6px',\r\n  };\r\n\r\n  users.map((user, index) => {\r\n    userData.push({\r\n      title: user,\r\n      value: userPaidTotal(bills, getIndex(users, user)),\r\n      color: colors[index],\r\n      label: '1',\r\n    });\r\n  });\r\n\r\n  return (\r\n    <PieChart\r\n      radius={40}\r\n      totalValue={totalValue}\r\n      style={{ height: '200px' }}\r\n      data={userData}\r\n      label={({ dataEntry }) => `${dataEntry.title}(${dataEntry.value})€`}\r\n      labelPosition={101}\r\n      labelStyle={{ ...defaultLabelStyle }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Chart from './Chart';\r\nimport load from '../../../Functions/loadFromLocalStorage';\r\nimport balance from '../../../Functions/Balance/balance';\r\nimport totalSum from '../../../Functions/totalSum';\r\n\r\nfunction Balance() {\r\n  const { groupName, users, bills } = load('currentGroup');\r\n  const { getBalance } = balance;\r\n\r\n  // Set correct prefix for the balance\r\n  // (+) for positive (-) for negative\r\n  const prefix = (userBalance) => (userBalance >= 0\r\n    ? `+${userBalance}`\r\n    : `${userBalance}`);\r\n\r\n  const userFields = users.map((user, index) => (\r\n    <React.Fragment key={`${user.name}${index * 1}`}>\r\n      <tr>\r\n        <td>{user}</td>\r\n        <td style={{\r\n          color: getBalance(bills, users, users[index]) >= 0\r\n            ? 'green'\r\n            : 'red',\r\n        }}\r\n        >\r\n          {`${prefix(getBalance(bills, users, users[index]))} €`}\r\n        </td>\r\n      </tr>\r\n    </React.Fragment>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ paddingTop: '10%' }}>{groupName}</h2>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Balance</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{userFields}</tbody>\r\n      </Table>\r\n      {bills\r\n        ? (\r\n          <>\r\n            <Chart\r\n              totalValue={totalSum(bills)}\r\n              users={users}\r\n              bills={bills}\r\n            />\r\n            <i><h4>{`Total: ${totalSum(bills).toFixed(2)} €`}</h4></i>\r\n          </>\r\n        )\r\n        : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Balance;\r\n","/* eslint-disable no-param-reassign */\r\nimport load from '../loadFromLocalStorage';\r\nimport save from '../saveToLocalStorage';\r\n\r\nfunction saveChanges(group, bill, editedBill, totalSum) {\r\n  const savedGroups = load('savedGroups');\r\n  const currentGroup = load('currentGroup');\r\n\r\n  // Set edited values as new values\r\n  bill.details.forEach((user, index) => {\r\n    user.paid = Object.values(editedBill)[index].toFixed(2);\r\n  });\r\n  bill.total = Number(totalSum);\r\n\r\n  // Update old bill with the edited bill\r\n  const billIndex = group.bills\r\n    .findIndex((obj) => obj.description === bill.description);\r\n  currentGroup.bills[billIndex] = bill;\r\n\r\n  // Update group data to localStorage\r\n  const groupIndex = savedGroups\r\n    .findIndex((obj) => obj.groupName === group.groupName);\r\n  save('currentGroup', currentGroup);\r\n\r\n  savedGroups[groupIndex] = currentGroup;\r\n  save('savedGroups', savedGroups);\r\n  return true;\r\n}\r\n\r\nexport default saveChanges;\r\n","import React, { useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport saveChanges from '../../../../Functions/EditBill/saveChanges';\r\n\r\nfunction EditBills(showBillProps) {\r\n  const { currentGroup, currentBill, editBill } = showBillProps;\r\n  const totalSum = useRef();\r\n  // For Discard button onClick\r\n  function stopEditing() {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm('Stop editing and discard changes?')) editBill();\r\n  }\r\n\r\n  // Create object from bill details\r\n  let usersPaid = {};\r\n  currentBill.details.forEach((user) => {\r\n    usersPaid[user.name] = Number(user.paid);\r\n  });\r\n  // Handle submit\r\n  function handleEdit(e) {\r\n    e.preventDefault();\r\n    if (saveChanges(currentGroup, currentBill, usersPaid, totalSum.current.value)) {\r\n      alert('Changes saved!');\r\n      editBill();\r\n    } else {\r\n      alert('Something went wrong!');\r\n    }\r\n  }\r\n\r\n  // Return value to have 2 decimals\r\n  function updateField(e) {\r\n    e.value = Number(e.value).toFixed(2);\r\n    return e.value;\r\n  }\r\n\r\n  // Handle user inputs\r\n  function saveValue(e) {\r\n    const userPaid = Number(updateField(e));\r\n    // Save user input to correct username\r\n    usersPaid = {\r\n      ...usersPaid,\r\n      [e.name]: userPaid,\r\n    };\r\n\r\n    // Calulate total sum value from user inputs\r\n    totalSum.current.value = Object.values(usersPaid)\r\n      .reduce((a, b) => a + b)\r\n      .toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ padding: '15%' }}>\r\n        {`Edit bill ${currentBill.description}`}\r\n      </h2>\r\n      <Form\r\n        onSubmit={(e) => handleEdit(e)}\r\n        style={{ margin: '0 6rem' }}\r\n      >\r\n        {currentBill.details\r\n          .map((user, index) => (\r\n            <React.Fragment key={`${user.name}${index * 1}`}>\r\n              <Form.Group>\r\n                <Form.Label>{user.name}</Form.Label>\r\n                <Form.Control\r\n                  onBlur={(e) => saveValue(e.target)}\r\n                  onFocus={(e) => { e.target.value = ''; }}\r\n                  required\r\n                  name={user.name}\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  placeholder=\"0.00\"\r\n                  defaultValue={user.paid}\r\n                />\r\n              </Form.Group>\r\n            </React.Fragment>\r\n          ))}\r\n        <Form.Label>Total</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          name=\"total\"\r\n          step=\"0.01\"\r\n          placeholder=\"0.00\"\r\n          ref={totalSum}\r\n          tabIndex={-1}\r\n          readOnly\r\n          defaultValue={currentBill.total.toFixed(2)}\r\n        />\r\n        <Button type=\"submit\" variant=\"primary\">Save</Button>\r\n        <Button\r\n          type=\"reset\"\r\n          variant=\"danger\"\r\n          onClick={() => stopEditing()}\r\n        >\r\n          Discard\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(EditBills);\r\n","import React, { useState } from 'react';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Bills from './Bills/Bills';\r\nimport Balance from './Balance/Balance';\r\nimport Edit from './Bills/EditBills/EditBills';\r\nimport load from '../../Functions/loadFromLocalStorage';\r\n\r\nfunction SecondPage(appProps) {\r\n  const {\r\n    tab, setTab, changePage,\r\n  } = appProps;\r\n\r\n  const [currentBill, setCurrentBill] = useState();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const currentGroup = load('currentGroup');\r\n  let { bills } = currentGroup;\r\n\r\n  function setBill(index) {\r\n    bills = load('currentGroup').bills;\r\n    index\r\n      ? setCurrentBill(bills[index])\r\n      : setCurrentBill('');\r\n  }\r\n\r\n  // When user edits bill\r\n  // Disable everything else\r\n  function editBill() {\r\n    setEditMode(!editMode);\r\n  }\r\n  return (\r\n    <>\r\n      {editMode\r\n        ? (\r\n          <Edit\r\n            editBill={editBill}\r\n            currentBill={currentBill}\r\n            currentGroup={currentGroup}\r\n          />\r\n        )\r\n        : (\r\n          <Tabs\r\n            transition={false}\r\n            activeKey={tab}\r\n            onSelect={(k) => setTab(k)}\r\n          >\r\n            <Tab eventKey=\"bills\" title=\"Bills\">\r\n              <Bills\r\n                editBill={editBill}\r\n                setBill={setBill}\r\n                currentBill={currentBill}\r\n                bills={bills}\r\n              />\r\n            </Tab>\r\n            <Tab eventKey=\"balance\" title=\"Balance\">\r\n              <Balance />\r\n            </Tab>\r\n            <Tab eventKey=\"exit\" title=\"Exit\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  changePage('main', 'new');\r\n                  setBill('');\r\n                }}\r\n                style={{ marginTop: '5rem', fontSize: '2rem' }}\r\n              >\r\n                Exit\r\n              </button>\r\n            </Tab>\r\n          </Tabs>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SecondPage;\r\n","import React, { useState } from 'react';\r\nimport MainPage from './Components/Main Page/Main Page';\r\nimport SecondPage from './Components/Second Page/Second Page';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState('main');\r\n  const [tab, setTab] = useState('new');\r\n\r\n  function changePage(goTo, active) {\r\n    setPage(goTo);\r\n    setTab(active);\r\n  }\r\n\r\n  return (\r\n    <main className=\"app-container\">\r\n      <>\r\n        {page === 'main' ? (\r\n          <MainPage\r\n            tab={tab}\r\n            setTab={setTab}\r\n            changePage={changePage}\r\n          />\r\n        ) : (\r\n          <SecondPage\r\n            tab={tab}\r\n            setTab={setTab}\r\n            changePage={changePage}\r\n          />\r\n        )}\r\n      </>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}