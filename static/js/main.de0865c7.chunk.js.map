{"version":3,"sources":["Functions/groupNameExists.js","Functions/loadFromLocalStorage.js","Functions/saveToLocalStorage.js","Functions/handleFormData.js","Functions/validate.js","Components/Main Page/New/New.js","Functions/currentGroup.js","Components/Main Page/Load/Load.js","Components/Main Page/Main Page.js","Functions/updateSavedGroups.js","Functions/AddBill/saveBill.js","Components/Second Page/Bills/AddBill/AddBillForm.js","Components/Second Page/Bills/AddBill/AddBill.js","Components/Second Page/Bills/ShowBills/BillTable.js","Components/Second Page/Bills/ShowBills/ShowBills.js","Components/Second Page/Bills/Bills.js","Functions/Balance/getBalance.js","Components/Second Page/Balance/Balance.js","Components/Second Page/Second Page.js","Functions/EditBill/saveChanges.js","Components/Second Page/Bills/EditBills/EditBills.js","App.js","index.js"],"names":["groupNameExists","groupName","groups","some","group","toLowerCase","key","JSON","parse","localStorage","getItem","value","setItem","stringify","handleFormData","formData","groupData","users","Object","values","validate","newGroup","savedGroups","load","firstGroup","save","alert","push","New","appProps","changePage","Form","onSubmit","e","preventDefault","FormData","target","formDataObj","fromEntries","entries","Group","controlId","Label","Control","type","placeholder","name","defaultValue","required","Button","variant","currentGroup","find","Load","map","onClick","style","display","flexDirection","margin","MainPage","tab","setTab","Tabs","transition","id","activeKey","onSelect","k","Tab","eventKey","title","replace","findGroup","findIndex","x","getUserInfo","data","billInfo","description","evenShares","total","paid","handleAddBillForm","form","submitBtn","button","current","disabled","Number","details","bill","bills","update","saveBill","AddBillForm","AddBillProps","userNames","saveValue","totalSum","formRef","useRef","buttonRef","ref","reset","fontSize","marginBottom","onKeyDown","Fragment","onBlur","onFocus","step","tabIndex","readOnly","marginLeft","marginRight","className","defaultChecked","AddBill","usersPaid","forEach","userPaid","parseFloat","toFixed","updateField","reduce","a","b","BillTable","showBillProps","currentBill","editBill","valueChange","amount","participants","length","billData","user","index","color","all","cursor","Table","responsive","striped","bordered","hover","size","textAlign","ShowBills","billsProps","billElements","setBill","onChange","selected","hidden","Bills","pageProps","useState","borderBottom","marginTop","getBalance","userName","userIndex","getIndex","userPaidTotal","payment","Math","round","Balance","userFields","balance","SecondPage","saveChanges","editedBill","billIndex","obj","groupIndex","EditBills","padding","handleEdit","confirm","React","memo","App","page","setPage","editMode","setEditMode","setCurrentBill","goTo","active","useEffect","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de0865c7.chunk.js","sourcesContent":["/**\r\n * Check if group name already exists in localStorage\r\n * @param {string} groupName\r\n * @param {Array} groups - Array of groups saved to localStorage\r\n * @returns {boolean} - Group name exist or not\r\n */\r\nfunction groupNameExists(groupName, groups) {\r\n  return groups\r\n    .some((group) => group.groupName.toLowerCase() === groupName.toLowerCase());\r\n}\r\n\r\nexport default groupNameExists;\r\n","/**\r\n * Return parsed data from localStorage\r\n * @param {string} key\r\n * @returns {Array} - Parsed array\r\n */\r\nexport default (key) => JSON.parse(localStorage.getItem(key));\r\n","/**\r\n * Save data with key/value pairs to localStorage\r\n * @param {string} key\r\n * @param {Array} value - Group/s data as array\r\n */\r\nexport default (key, value) => localStorage.setItem(key, JSON.stringify(value));\r\n","/**\r\n * @param {Object} formData - Contains group name and usernames\r\n * @returns {Object} - { groupName: 'Meters', userNames: ['John','Mike','Helen'] }\r\n */\r\n\r\nfunction handleFormData(formData) {\r\n  const groupData = formData;\r\n  const { groupName } = groupData;\r\n\r\n  // Delete groupName property so object has only usernames as values\r\n  delete groupData.groupName;\r\n\r\n  // Make array from usernames\r\n  // Return object from group name and usernames\r\n  const users = Object.values(formData);\r\n  return { groupName, users };\r\n}\r\n\r\nexport default handleFormData;\r\n","import groupNameExists from './groupNameExists';\r\nimport load from './loadFromLocalStorage';\r\nimport save from './saveToLocalStorage';\r\nimport handleFormData from './handleFormData';\r\n\r\n// TODO:\r\n// Change error handling if group name exists\r\n// Validate fields\r\n\r\n// Validate form\r\n// Save group values to localStorage\r\nfunction validate(formData) {\r\n  // Create group object from formData\r\n  const newGroup = handleFormData(formData);\r\n\r\n  // Get saved groups from localStorage\r\n  const savedGroups = load('savedGroups');\r\n\r\n  // If no groups saved yet save group as new array\r\n  // Save group as object to localStorage currentGroup\r\n  if (!savedGroups) {\r\n    const firstGroup = newGroup;\r\n    save('currentGroup', firstGroup);\r\n    save('savedGroups', [firstGroup]);\r\n    return true;\r\n  }\r\n\r\n  // No duplicate group names\r\n  if (groupNameExists(newGroup.groupName, savedGroups)) {\r\n    alert('Group name already exists!');\r\n    return false;\r\n  }\r\n\r\n  // Add new group to previously created groups array\r\n  // Save current group to localStorage\r\n  savedGroups.push(newGroup);\r\n  save('savedGroups', savedGroups);\r\n  save('currentGroup', newGroup);\r\n  return true;\r\n}\r\n\r\nexport default validate;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport validate from '../../../Functions/validate';\r\nimport './style.css';\r\n\r\nfunction New(appProps) {\r\n  const { changePage } = appProps;\r\n\r\n  function formSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Get form values as object\r\n    const formData = new FormData(e.target);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n\r\n    // If values are valid go to next page\r\n    if (validate(formDataObj)) changePage('page2', 'bills');\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={formSubmit}>\r\n      <Form.Group controlId=\"groupName\">\r\n        <Form.Label>Group name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"The meters\"\r\n          name=\"groupName\"\r\n          defaultValue=\"The Meters\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"users\">\r\n        <Form.Label>Users</Form.Label>\r\n        <Form.Control\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"User 1\"\r\n          name=\"user1\"\r\n          defaultValue=\"eka nimi\"\r\n        />\r\n        <Form.Control\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"User 2\"\r\n          name=\"user2\"\r\n          defaultValue=\"toka nimi\"\r\n        />\r\n        <Form.Control\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"User 3\"\r\n          name=\"user3\"\r\n          defaultValue=\"kolmas nimi\"\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default New;\r\n","import load from './loadFromLocalStorage';\r\n/**\r\n * From localStorage:\r\n * Get current groups data matching the group name\r\n * @param {string} name - Group name to match\r\n * @returns {Object} - Eg. { groupName: 'Meters', userNames: ['John','Mike','Helen'] }\r\n */\r\nfunction currentGroup(name) {\r\n  const groups = load('savedGroups');\r\n  return groups.find((group) => group.groupName === name);\r\n}\r\n\r\nexport default currentGroup;\r\n","import React from 'react';\r\nimport load from '../../../Functions/loadFromLocalStorage';\r\nimport currentGroup from '../../../Functions/currentGroup';\r\nimport save from '../../../Functions/saveToLocalStorage';\r\n\r\nfunction Load(appProps) {\r\n  const { changePage } = appProps;\r\n  let groups = load('savedGroups');\r\n\r\n  // Save selected group as currentGroup\r\n  // Go to next page\r\n  function loadGroup(groupName) {\r\n    save('currentGroup', currentGroup(groupName));\r\n    changePage('page2', 'bills');\r\n  }\r\n\r\n  // Render group names as buttons\r\n  if (!groups) {\r\n    groups = <h1>No groups found!</h1>;\r\n  } else {\r\n    groups = groups.map((group) => (\r\n      <button\r\n        onClick={() => loadGroup(group.groupName)}\r\n        key={group.groupName}\r\n        type=\"button\"\r\n      >\r\n        {group.groupName}\r\n      </button>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '5rem 3rem',\r\n      }}\r\n    >\r\n      {groups}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Load;\r\n","import React from 'react';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport New from './New/New';\r\nimport Load from './Load/Load';\r\n\r\nfunction MainPage(appProps) {\r\n  const { tab, setTab, changePage } = appProps;\r\n  return (\r\n    <Tabs\r\n      transition={false}\r\n      id=\"controlled\"\r\n      activeKey={tab}\r\n      onSelect={(k) => setTab(k)}\r\n    >\r\n      <Tab eventKey=\"new\" title=\"New\">\r\n        <New changePage={changePage} />\r\n      </Tab>\r\n      <Tab eventKey=\"load\" title=\"Load\">\r\n        <Load changePage={changePage} />\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import load from './loadFromLocalStorage';\r\nimport save from './saveToLocalStorage';\r\n\r\n// Update localStorage array\r\nfunction replace(key, group) {\r\n  const { groupName } = group;\r\n  const groups = load(key);\r\n\r\n  const findGroup = groups.findIndex((x) => x.groupName === groupName);\r\n  groups[findGroup] = group;\r\n  save(key, groups);\r\n}\r\n\r\nexport default replace;\r\n","import save from '../saveToLocalStorage';\r\nimport load from '../loadFromLocalStorage';\r\nimport update from '../updateSavedGroups';\r\n\r\nfunction getUserInfo(data) {\r\n  const billInfo = data;\r\n  // Remove all keys except how much users paid\r\n  delete billInfo.description;\r\n  delete billInfo.evenShares;\r\n  delete billInfo.total;\r\n\r\n  // Return array of objects\r\n  return Object.entries(billInfo)\r\n    .map(([name, paid]) => ({ name, paid }));\r\n}\r\n\r\n// If no bills saved yet\r\n// Create array and add new bill\r\nfunction saveBill(currentGroup, bill) {\r\n  const group = currentGroup;\r\n  if (!('bills' in group)) group.bills = [bill];\r\n  else group.bills.push(bill);\r\n  save('currentGroup', group);\r\n  update('savedGroups', group);\r\n  return true;\r\n}\r\n\r\n// Starts with this function\r\nfunction handleAddBillForm(form, submitBtn) {\r\n  form.preventDefault();\r\n  const button = submitBtn;\r\n  button.current.disabled = true;\r\n  // Get form values as object\r\n  const formData = new FormData(form.target);\r\n  const values = Object.fromEntries(formData.entries());\r\n  const data = {\r\n    description: values.description,\r\n    total: Number(values.total),\r\n    evenShares: !!values.evenShares,\r\n    details: getUserInfo(values),\r\n  };\r\n  const currentGroup = load('currentGroup');\r\n  saveBill(currentGroup, data);\r\n  button.current.disabled = false;\r\n  alert('Saved');\r\n  return true;\r\n}\r\n\r\nexport default handleAddBillForm;\r\n","import React, { useRef } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport saveBill from '../../../../Functions/AddBill/saveBill';\r\n\r\nfunction AddBillForm(AddBillProps) {\r\n  const {\r\n    userNames,\r\n    saveValue,\r\n    totalSum,\r\n  } = AddBillProps;\r\n\r\n  const formRef = useRef();\r\n  const buttonRef = useRef();\r\n\r\n  // Create input fields according to usernames\r\n  function getInputFields(users) {\r\n    return users.map((name) => (\r\n      <React.Fragment key={name}>\r\n        <Form.Label>\r\n          {name}\r\n        </Form.Label>\r\n        <Form.Control\r\n          onBlur={(e) => saveValue(e.target)}\r\n          onFocus={(e) => { e.target.value = ''; }}\r\n          required\r\n          name={name}\r\n          type=\"number\"\r\n          step=\"0.01\"\r\n          placeholder=\"0.00\"\r\n          onKeyDown={(e) => (e.key === 'Enter'\r\n            ? e.preventDefault()\r\n            : null)}\r\n        />\r\n        <br />\r\n      </React.Fragment>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      ref={formRef}\r\n      onSubmit={(e) => {\r\n        saveBill(e, buttonRef)\r\n          ? formRef.current.reset()\r\n          : alert('Something went wrong!');\r\n        buttonRef.current.disabled = false;\r\n      }}\r\n    >\r\n      <Form.Label\r\n        style={{ fontSize: '1.5rem', marginBottom: '1rem' }}\r\n        onKeyDown={(e) => (e.key === 'Enter'\r\n          ? e.preventDefault()\r\n          : null)}\r\n      >\r\n        Title\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"description\"\r\n          required\r\n          placeholder=\"Bill title\"\r\n          onKeyDown={(e) => (e.key === 'Enter'\r\n            ? e.preventDefault()\r\n            : null)}\r\n        />\r\n      </Form.Label>\r\n      <Form.Group controlId=\"usersPaid\">\r\n        {getInputFields(userNames)}\r\n      </Form.Group>\r\n      <Form.Group controlId=\"totalSum\">\r\n        <Form.Label>Total sum:</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          name=\"total\"\r\n          step=\"0.01\"\r\n          placeholder=\"0.00\"\r\n          ref={totalSum}\r\n          tabIndex={-1}\r\n          readOnly\r\n        />\r\n      </Form.Group>\r\n      <Form.Label style={{ marginBottom: '1rem' }}>\r\n        Even shares?\r\n        <input\r\n          name=\"evenShares\"\r\n          style={{\r\n            marginLeft: '0.5rem',\r\n            marginRight: '0.4rem',\r\n          }}\r\n          className=\"toggle\"\r\n          type=\"checkbox\"\r\n          defaultChecked\r\n          onKeyDown={(e) => (e.key === 'Enter'\r\n            ? e.preventDefault()\r\n            : null)}\r\n        />\r\n      </Form.Label>\r\n      <br />\r\n\r\n      <Button variant=\"primary\" type=\"submit\" ref={buttonRef}>\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AddBillForm;\r\n","import React, { useRef } from 'react';\r\nimport Form from './AddBillForm';\r\nimport load from '../../../../Functions/loadFromLocalStorage';\r\nimport './style.css';\r\n\r\n// TODO:\r\n// Fix functions updatefield and saveValue\r\n\r\nfunction AddBill() {\r\n  const { users } = load('currentGroup');\r\n  const totalSum = useRef(0);\r\n\r\n  // Create object\r\n  // Set usernames as keys\r\n  let usersPaid = {};\r\n  users.forEach((key) => {\r\n    usersPaid[key] = 0;\r\n  });\r\n\r\n  // Return value to have 2 decimals\r\n  function updateField(e) {\r\n    e.value = parseFloat(e.value).toFixed(2);\r\n    return e.value;\r\n  }\r\n\r\n  // Handle user inputs\r\n  function saveValue(e) {\r\n    const userPaid = updateField(e);\r\n    // Save user input to correct username\r\n    usersPaid = {\r\n      ...usersPaid,\r\n      [e.name]: Number(userPaid),\r\n    };\r\n\r\n    // Calulate total sum value from user inputs\r\n    totalSum.current.value = Number(Object.values(usersPaid)\r\n      .reduce((a, b) => a + b))\r\n      .toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <section className=\"add-bill-controller\">\r\n      <Form\r\n        saveValue={saveValue}\r\n        userNames={users}\r\n        usersPaid={usersPaid}\r\n        totalSum={totalSum}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AddBill;\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nfunction BillTable(showBillProps) {\r\n  const { currentBill, editBill } = showBillProps;\r\n\r\n  const prefix = (amount) => (amount >= 0\r\n    ? `+${amount}`\r\n    : `${amount}`);\r\n\r\n  // Return number of user paid more or less than needed\r\n  function valueChange(paid) {\r\n    const userPaid = paid;\r\n    const { total } = currentBill;\r\n    const participants = currentBill.details.length;\r\n    return prefix((userPaid - total / participants).toFixed(2));\r\n  }\r\n\r\n  const billData = currentBill\r\n    ? currentBill\r\n      .details\r\n      .map((user, index) => (\r\n        <React.Fragment key={`${user.name}${index * 1}`}>\r\n          <tr>\r\n            <td>{user.name}</td>\r\n            <td>{`${user.paid} €`}</td>\r\n            <td\r\n          // Green color if user paid more than needed\r\n          // Red color if user paid less than needed\r\n              style={{\r\n                color: valueChange(user.paid) >= 0\r\n                  ? 'green'\r\n                  : 'red',\r\n              }}\r\n            >\r\n              {`${valueChange(user.paid)} €`}\r\n\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      )) : null;\r\n\r\n  return (\r\n    <>\r\n      {currentBill\r\n        ? (\r\n          <>\r\n            <br />\r\n            <button\r\n              onClick={() => editBill()}\r\n              type=\"button\"\r\n              style={{\r\n                all: 'unset',\r\n                cursor: 'pointer',\r\n                marginLeft: '20rem',\r\n              }}\r\n            >\r\n              <i className=\"far fa-edit\" />\r\n            </button>\r\n            <Table responsive striped bordered hover size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Paid</th>\r\n                  <th>Change</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {billData}\r\n              </tbody>\r\n            </Table>\r\n            <h4 style={{ textAlign: 'center' }}>\r\n              {`Total ${currentBill.total.toFixed(2)} €`}\r\n            </h4>\r\n          </>\r\n        )\r\n        : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BillTable;\r\n","import React from 'react';\r\nimport Table from './BillTable';\r\n\r\nfunction ShowBills(billsProps) {\r\n  const {\r\n    currentBill, editBill, billElements, setBill,\r\n  } = billsProps;\r\n\r\n  return (\r\n    <>\r\n      <select style={{ textAlign: 'center' }} onChange={(e) => setBill(e.target.value)}>\r\n        <option value=\"\" selected={!currentBill} disabled hidden>Select</option>\r\n        {billElements}\r\n      </select>\r\n      <Table\r\n        currentBill={currentBill}\r\n        editBill={editBill}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShowBills;\r\n","import React, { useState } from 'react';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Add from './AddBill/AddBill';\r\nimport Show from './ShowBills/ShowBills';\r\nimport load from '../../../Functions/loadFromLocalStorage';\r\nimport './style.css';\r\n\r\nfunction Bills(pageProps) {\r\n  const { editBill, currentBill, setBill } = pageProps;\r\n  const [tab, setTab] = useState('addBill');\r\n  const currentGroup = load('currentGroup');\r\n  const { bills } = currentGroup;\r\n\r\n  const billElements = bills\r\n    ? bills.map((bill, index) => (\r\n      <React.Fragment key={`${index * 1}${bill.description}`}>\r\n        <option value={index}>{`${bill.description} (${(bill.total).toFixed(2)} €)`}</option>\r\n      </React.Fragment>\r\n    ))\r\n    : null;\r\n\r\n  return (\r\n    <Tabs\r\n      transition={false}\r\n      id=\"controlled\"\r\n      activeKey={tab}\r\n      onSelect={(k) => setTab(k)}\r\n      style={{\r\n        margin: '0.5rem 3rem',\r\n        fontSize: '1rem',\r\n        borderBottom: 'none',\r\n        marginTop: '0.5rem',\r\n      }}\r\n    >\r\n      <Tab eventKey=\"addBill\" title=\"Add bill\">\r\n        <Add />\r\n      </Tab>\r\n      <Tab eventKey=\"showBill\" title=\"Show bills\">\r\n        { bills\r\n          ? (\r\n            <Show\r\n              currentGroup={currentGroup}\r\n              editBill={editBill}\r\n              currentBill={currentBill}\r\n              billElements={billElements}\r\n              bills={bills}\r\n              setBill={setBill}\r\n            />\r\n          )\r\n          : <h4>No bills saved</h4>}\r\n\r\n      </Tab>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default Bills;\r\n","// Calculate total sum from all bills\r\nconst addTogether = (array) => array\r\n  .map((bill) => bill.total)\r\n  .reduce((a, b) => a + b);\r\n\r\n// Get user index from user names array\r\nconst getIndex = (userNames, user) => userNames\r\n  .findIndex((name) => name === user);\r\n\r\n// Calculate total balance for user\r\nfunction getBalance(bills, userNames, userName) {\r\n  if (!bills) return 0;\r\n  // How many users in group\r\n  const participants = userNames.length;\r\n\r\n  // Total sum from bills\r\n  const totalSum = addTogether(bills);\r\n\r\n  // Get current user index from userNames array\r\n  const userIndex = getIndex(userNames, userName);\r\n\r\n  // Get all user payments from bills\r\n  const userPayments = bills\r\n    .map((bill) => Number(bill.details[userIndex].paid));\r\n\r\n  // Add user payments together to get total sum\r\n  const userPaidTotal = userPayments\r\n    .reduce((payment, total) => payment + total);\r\n\r\n  // Calculate and set user balance as integer\r\n  // return balance\r\n  const userBalance = Math\r\n    .round(((userPaidTotal - totalSum / participants)) * 100) / 100;\r\n  return userBalance;\r\n}\r\n\r\nexport default getBalance;\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport load from '../../../Functions/loadFromLocalStorage';\r\nimport getBalance from '../../../Functions/Balance/getBalance';\r\n\r\nfunction Balance() {\r\n  const { groupName, users, bills } = load('currentGroup');\r\n\r\n  // Set correct prefix for the balance\r\n  // (+) for positive (-) for negative\r\n  const prefix = (balance) => (balance >= 0\r\n    ? `+${balance}`\r\n    : `${balance}`);\r\n\r\n  const userFields = users.map((user, index) => (\r\n    <React.Fragment key={`${user.name}${index * 1}`}>\r\n      <tr>\r\n        <td>{user}</td>\r\n        <td style={{\r\n          color: getBalance(bills, users, users[index]) >= 0\r\n            ? 'green'\r\n            : 'red',\r\n        }}\r\n        >\r\n          {`${prefix(getBalance(bills, users, users[index]))} €`}\r\n        </td>\r\n      </tr>\r\n    </React.Fragment>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <h2>{groupName}</h2>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Balance</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{userFields}</tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Bills from './Bills/Bills';\r\nimport Balance from './Balance/Balance';\r\n\r\nfunction SecondPage(appProps) {\r\n  const {\r\n    tab, setTab, changePage, editBill, setBill, currentBill,\r\n  } = appProps;\r\n  return (\r\n    <>\r\n      <Tabs\r\n        transition={false}\r\n        id=\"controlled\"\r\n        activeKey={tab}\r\n        onSelect={(k) => setTab(k)}\r\n      >\r\n        <Tab eventKey=\"bills\" title=\"Bills\">\r\n          <Bills\r\n            editBill={editBill}\r\n            setBill={setBill}\r\n            currentBill={currentBill}\r\n          />\r\n        </Tab>\r\n        <Tab eventKey=\"balance\" title=\"Balance\">\r\n          <Balance />\r\n        </Tab>\r\n        <Tab eventKey=\"exit\" title=\"Exit\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => changePage('main', 'new')}\r\n            style={{ marginTop: '5rem', fontSize: '2rem' }}\r\n          >\r\n            Exit\r\n          </button>\r\n        </Tab>\r\n      </Tabs>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SecondPage;\r\n","/* eslint-disable no-param-reassign */\r\nimport load from '../loadFromLocalStorage';\r\nimport save from '../saveToLocalStorage';\r\n\r\nfunction saveChanges(group, bill, editedBill, totalSum) {\r\n  const savedGroups = load('savedGroups');\r\n  const currentGroup = load('currentGroup');\r\n\r\n  // Set edited values as new values\r\n  bill.details.forEach((user, index) => {\r\n    user.paid = Object.values(editedBill)[index].toFixed(2);\r\n  });\r\n  bill.total = Number(totalSum);\r\n\r\n  // Update old bill with the edited bill\r\n  const billIndex = group.bills\r\n    .findIndex((obj) => obj.description === bill.description);\r\n  currentGroup.bills[billIndex] = bill;\r\n\r\n  // Update group data to localStorage\r\n  const groupIndex = savedGroups\r\n    .findIndex((obj) => obj.groupName === group.groupName);\r\n  save('currentGroup', currentGroup);\r\n\r\n  savedGroups[groupIndex] = currentGroup;\r\n  save('savedGroups', savedGroups);\r\n  return true;\r\n}\r\n\r\nexport default saveChanges;\r\n","import React, { useRef } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport saveChanges from '../../../../Functions/EditBill/saveChanges';\r\n\r\nfunction EditBills(showBillProps) {\r\n  const { currentGroup, currentBill, editBill } = showBillProps;\r\n  const totalSum = useRef();\r\n  // For Discard button onClick\r\n  function stopEditing() {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm('Stop editing and discard changes?')) editBill();\r\n  }\r\n\r\n  // Create object from bill details\r\n  let usersPaid = {};\r\n  currentBill.details.forEach((user) => {\r\n    usersPaid[user.name] = Number(user.paid);\r\n  });\r\n  // Handle submit\r\n  function handleEdit(e) {\r\n    e.preventDefault();\r\n    if (saveChanges(currentGroup, currentBill, usersPaid, totalSum.current.value)) {\r\n      alert('Changes saved!');\r\n      editBill();\r\n    } else {\r\n      alert('Something went wrong!');\r\n    }\r\n  }\r\n\r\n  // Return value to have 2 decimals\r\n  function updateField(e) {\r\n    e.value = Number(e.value).toFixed(2);\r\n    return e.value;\r\n  }\r\n\r\n  // Handle user inputs\r\n  function saveValue(e) {\r\n    const userPaid = Number(updateField(e));\r\n    // Save user input to correct username\r\n    usersPaid = {\r\n      ...usersPaid,\r\n      [e.name]: userPaid,\r\n    };\r\n\r\n    // Calulate total sum value from user inputs\r\n    totalSum.current.value = Object.values(usersPaid)\r\n      .reduce((a, b) => a + b)\r\n      .toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ padding: '15%' }}>\r\n        {`Edit bill ${currentBill.description}`}\r\n      </h2>\r\n      <Form\r\n        onSubmit={(e) => handleEdit(e)}\r\n        style={{ margin: '0 6rem' }}\r\n      >\r\n        {currentBill.details\r\n          .map((user, index) => (\r\n            <React.Fragment key={`${user.name}${index * 1}`}>\r\n              <Form.Group>\r\n                <Form.Label>{user.name}</Form.Label>\r\n                <Form.Control\r\n                  onBlur={(e) => saveValue(e.target)}\r\n                  onFocus={(e) => { e.target.value = ''; }}\r\n                  required\r\n                  name={user.name}\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  placeholder=\"0.00\"\r\n                  defaultValue={user.paid}\r\n                />\r\n              </Form.Group>\r\n            </React.Fragment>\r\n          ))}\r\n        <Form.Label>Total</Form.Label>\r\n        <Form.Control\r\n          type=\"number\"\r\n          name=\"total\"\r\n          step=\"0.01\"\r\n          placeholder=\"0.00\"\r\n          ref={totalSum}\r\n          tabIndex={-1}\r\n          readOnly\r\n          defaultValue={currentBill.total.toFixed(2)}\r\n        />\r\n        <Button type=\"submit\" variant=\"primary\">Save</Button>\r\n        <Button\r\n          type=\"reset\"\r\n          variant=\"danger\"\r\n          onClick={() => stopEditing()}\r\n        >\r\n          Discard\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(EditBills);\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainPage from './Components/Main Page/Main Page';\r\nimport SecondPage from './Components/Second Page/Second Page';\r\nimport load from './Functions/loadFromLocalStorage';\r\nimport Edit from './Components/Second Page/Bills/EditBills/EditBills';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState('main');\r\n  const [tab, setTab] = useState('new');\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [currentBill, setCurrentBill] = useState();\r\n  const currentGroup = load('currentGroup');\r\n  const { bills } = currentGroup;\r\n\r\n  function changePage(goTo, active) {\r\n    setPage(goTo);\r\n    setTab(active);\r\n  }\r\n\r\n  function editBill() {\r\n    setEditMode(!editMode);\r\n  }\r\n\r\n  function setBill(index) {\r\n    setCurrentBill(bills[index]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('hep');\r\n  }, [currentGroup]);\r\n\r\n  return (\r\n    <main className=\"app-container\">\r\n      {editMode\r\n        ? (\r\n          <Edit\r\n            editBill={editBill}\r\n            currentBill={currentBill}\r\n            currentGroup={currentGroup}\r\n          />\r\n        )\r\n        : (\r\n          <>\r\n            {page === 'main' ? (\r\n              <MainPage\r\n                tab={tab}\r\n                setTab={setTab}\r\n                changePage={changePage}\r\n              />\r\n            ) : (\r\n              <SecondPage\r\n                tab={tab}\r\n                setTab={setTab}\r\n                changePage={changePage}\r\n                editBill={editBill}\r\n                currentBill={currentBill}\r\n                setBill={setBill}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}